{
    "name": "Loco",
    "apiVersion": "1.0.4",
    "baseUrl": "https:\/\/localise.biz\/",
    "description": "Loco REST API",
    "operations": {
        "authVerify": {
            "httpMethod": "GET",
            "uri": "\/api\/auth\/verify.json",
            "class": "Guzzle\\Service\\Command\\OperationCommand",
            "responseClass": "Creds",
            "responseType": "model",
            "responseNotes": "Loco API keys authenticate your user account for accessing a specific project.<br \/>\n             This endpoint verifies an API key and returns the authenticated user, account and project.",
            "summary": "Verify an API project key",
            "parameters": {
                "key": {
                    "required": true,
                    "description": "Project API key",
                    "type": "string",
                    "location": "query"
                }
            },
            "errorResponses": [
                {
                    "code": 401,
                    "phrase": "Invalid API key"
                }
            ]
        },
        "exportAll": {
            "httpMethod": "GET",
            "uri": "\/api\/export\/all.{ext}",
            "class": "Guzzle\\Service\\Command\\OperationCommand",
            "responseClass": "\\Loco\\Http\\Response\\RawResponse",
            "responseType": "class",
            "responseNotes": "Export all translations from your project to a multi-locale language pack.<br \/>\n           <br \/>\n           Note that not all formats support multiple locales in the same file. See <code>\/export\/archive<\/code> for exporting separate files,\n           and <code>\/export\/locale<\/code> for exporting one language at a time.",
            "summary": "Export your whole project to a multi-locale language pack",
            "parameters": {
                "ext": {
                    "required": true,
                    "description": "Target file type specified as a file extension",
                    "type": "string",
                    "location": "uri",
                    "enum": [
                        "csv",
                        "html",
                        "sql",
                        "tmx",
                        "xlf",
                        "yml"
                    ],
                    "default": "yml"
                },
                "key": {
                    "required": true,
                    "description": "Project API key",
                    "type": "string",
                    "location": "query"
                },
                "filter": {
                    "description": "Comma-separated list of tags to filter subset of assets.",
                    "type": "string",
                    "location": "query"
                },
                "index": {
                    "description": "Override default lookup key in language pack. Leave blank for auto.",
                    "type": "string",
                    "location": "query",
                    "enum": [
                        "id",
                        "name",
                        "text"
                    ]
                }
            },
            "errorResponses": [
                {
                    "code": 401,
                    "phrase": "Invalid API key"
                }
            ]
        },
        "exportArchive": {
            "httpMethod": "GET",
            "uri": "\/api\/export\/archive\/{ext}.zip",
            "class": "Guzzle\\Service\\Command\\OperationCommand",
            "responseClass": "\\Loco\\Http\\Response\\ZipResponse",
            "responseType": "class",
            "responseNotes": "Export all translations from your project to a zip archive of language packs.<br \/>\n           <br \/>\n           If you're exporting to a file format that supports multiple locales within the same file, you can use the <code>\/export\/all<\/code> method ",
            "summary": "Export all locales to a zip archive",
            "parameters": {
                "key": {
                    "required": true,
                    "description": "Project API key",
                    "type": "string",
                    "location": "query"
                },
                "format": {
                    "description": "Specific format, applicable to some file types only",
                    "type": "string",
                    "location": "query",
                    "enum": [
                        "symfony",
                        "zend",
                        "codeigniter",
                        "constants",
                        "chrome",
                        "nested",
                        "java",
                        "tizen"
                    ]
                },
                "filter": {
                    "description": "Comma-separated list of tags to filter subset of assets.",
                    "type": "string",
                    "location": "query"
                },
                "index": {
                    "description": "Override default lookup key in language pack. Leave blank for auto.",
                    "type": "string",
                    "location": "query",
                    "enum": [
                        "id",
                        "name",
                        "text"
                    ]
                },
                "ext": {
                    "required": true,
                    "description": "Target file type specified as a file extension",
                    "type": "string",
                    "location": "uri",
                    "enum": [
                        "csv",
                        "html",
                        "js",
                        "json",
                        "mo",
                        "phps",
                        "po",
                        "pot",
                        "resx",
                        "sql",
                        "strings",
                        "tmx",
                        "ts",
                        "xlf",
                        "xml",
                        "yml"
                    ],
                    "default": "json"
                }
            },
            "errorResponses": [
                {
                    "code": 401,
                    "phrase": "Invalid API key"
                }
            ]
        },
        "exportLocale": {
            "httpMethod": "GET",
            "uri": "\/api\/export\/locale\/{locale}.{ext}",
            "class": "Guzzle\\Service\\Command\\OperationCommand",
            "responseClass": "\\Loco\\Http\\Response\\RawResponse",
            "responseType": "class",
            "responseNotes": "Export translations from your project to a locale-specific language pack.\n           Various export file types are supported with format variations for some types.",
            "summary": "Export a single locale to a language pack.",
            "parameters": {
                "key": {
                    "required": true,
                    "description": "Project API key",
                    "type": "string",
                    "location": "query"
                },
                "format": {
                    "description": "Specific format, applicable to some file types only",
                    "type": "string",
                    "location": "query",
                    "enum": [
                        "symfony",
                        "zend",
                        "codeigniter",
                        "constants",
                        "chrome",
                        "nested",
                        "java",
                        "tizen"
                    ]
                },
                "filter": {
                    "description": "Comma-separated list of tags to filter subset of assets.",
                    "type": "string",
                    "location": "query"
                },
                "index": {
                    "description": "Override default lookup key in language pack. Leave blank for auto.",
                    "type": "string",
                    "location": "query",
                    "enum": [
                        "id",
                        "name",
                        "text"
                    ]
                },
                "locale": {
                    "required": true,
                    "description": "Locale to export, specified as short code. e.g. 'en' or 'en_GB'",
                    "type": "string",
                    "location": "uri"
                },
                "ext": {
                    "required": true,
                    "description": "Target file type specified as a file extension",
                    "type": "string",
                    "location": "uri",
                    "enum": [
                        "csv",
                        "html",
                        "js",
                        "json",
                        "mo",
                        "phps",
                        "po",
                        "pot",
                        "resx",
                        "sql",
                        "strings",
                        "tmx",
                        "ts",
                        "xlf",
                        "xml",
                        "yml"
                    ],
                    "default": "json"
                }
            },
            "errorResponses": [
                {
                    "code": 401,
                    "phrase": "Invalid API key"
                }
            ]
        },
        "getAssets": {
            "httpMethod": "GET",
            "uri": "\/api\/assets.json",
            "class": "Guzzle\\Service\\Command\\OperationCommand",
            "responseClass": "array",
            "responseType": "primitive",
            "summary": "List all translatable assets in your project",
            "parameters": {
                "key": {
                    "required": true,
                    "description": "Project API key",
                    "type": "string",
                    "location": "query"
                },
                "filter": {
                    "description": "Comma-separated list of tags to filter subset of assets.",
                    "type": "string",
                    "location": "query"
                }
            },
            "errorResponses": [
                {
                    "code": 401,
                    "phrase": "Invalid API key"
                }
            ]
        },
        "createAsset": {
            "httpMethod": "POST",
            "uri": "\/api\/assets.json",
            "class": "Guzzle\\Service\\Command\\OperationCommand",
            "responseClass": "Asset",
            "responseType": "model",
            "responseNotes": "<p>Adds a new asset to the currently authenticated project.<\/p>\n           <p>If the asset is created successfully the response will be 201 (created).<\/p>\n           <p>If you specify the asset ID and it clashes with an existing asset the response will be 409 (conflict).<\/p>\n           <p>If another asset exists with the same name and you <strong>haven't specified the ID<\/strong>, a new asset will be created with a unique id.<\/p>",
            "summary": "Add a new translatable asset",
            "parameters": {
                "name": {
                    "required": true,
                    "description": "Source text or just a name describing what the asset is",
                    "type": "string",
                    "location": "postField"
                },
                "id": {
                    "description": "Optional machine friendly ID if you want something specific",
                    "type": "string",
                    "location": "postField",
                    "default": ""
                },
                "type": {
                    "required": true,
                    "description": "Media type, defaults to plain old text",
                    "type": "string",
                    "location": "postField",
                    "enum": [
                        "text",
                        "html",
                        "image",
                        "audio",
                        "video",
                        "bin"
                    ],
                    "default": "text"
                },
                "key": {
                    "required": true,
                    "description": "Project API key",
                    "type": "string",
                    "location": "query"
                }
            },
            "errorResponses": [
                {
                    "code": 201,
                    "phrase": "Asset created"
                },
                {
                    "code": 401,
                    "phrase": "Invalid API key"
                },
                {
                    "code": 403,
                    "phrase": "Insufficient privileges"
                }
            ]
        },
        "getAsset": {
            "httpMethod": "GET",
            "uri": "\/api\/assets\/{id}.json",
            "class": "Guzzle\\Service\\Command\\OperationCommand",
            "responseClass": "Asset",
            "responseType": "model",
            "responseNotes": "Gets a single asset in currently authenticated project",
            "summary": "Get a project asset",
            "parameters": {
                "key": {
                    "required": true,
                    "description": "Project API key",
                    "type": "string",
                    "location": "query"
                },
                "id": {
                    "required": true,
                    "description": "Asset ID",
                    "type": "string",
                    "location": "uri"
                }
            },
            "errorResponses": [
                {
                    "code": 401,
                    "phrase": "Invalid API key"
                },
                {
                    "code": 404,
                    "phrase": "Asset not in project"
                }
            ]
        },
        "patchAsset": {
            "httpMethod": "PATCH",
            "uri": "\/api\/assets\/{id}.json",
            "class": "Guzzle\\Service\\Command\\OperationCommand",
            "responseClass": "Asset",
            "responseType": "model",
            "responseNotes": "<p>Modifies the properties of an asset in the currently authenticated project.<\/p>\n           <p>The full, modified asset object is returned.<\/p>",
            "summary": "Modify a single asset",
            "parameters": {
                "id_json": {
                    "description": "Machine friendly name",
                    "type": "string",
                    "location": "json",
                    "sentAs": "id"
                },
                "type": {
                    "description": "Broad content type, defaults to plain text",
                    "type": "string",
                    "location": "json",
                    "enum": [
                        "text",
                        "html",
                        "image",
                        "audio",
                        "video",
                        "bin"
                    ]
                },
                "name": {
                    "description": "Human friendly name",
                    "type": "string",
                    "location": "json"
                },
                "context": {
                    "description": "Optional context descriptor",
                    "type": "string",
                    "location": "json"
                },
                "key": {
                    "required": true,
                    "description": "Project API key",
                    "type": "string",
                    "location": "query"
                },
                "id": {
                    "required": true,
                    "description": "Asset ID",
                    "type": "string",
                    "location": "uri"
                }
            },
            "errorResponses": [
                {
                    "code": 401,
                    "phrase": "Invalid API key"
                },
                {
                    "code": 403,
                    "phrase": "Insufficient privileges"
                },
                {
                    "code": 404,
                    "phrase": "Asset not in project"
                }
            ]
        },
        "deleteAsset": {
            "httpMethod": "DELETE",
            "uri": "\/api\/assets\/{id}.json",
            "class": "Guzzle\\Service\\Command\\OperationCommand",
            "responseClass": "Success",
            "responseType": "model",
            "responseNotes": "<p>Deletes an asset from the currently authenticated project.<\/p>\n           <p><strong>Warning<\/strong>: This will permanently delete all translations made of this asset across all locales<\/p>",
            "summary": "Delete an asset permanently",
            "parameters": {
                "key": {
                    "required": true,
                    "description": "Project API key",
                    "type": "string",
                    "location": "query"
                },
                "id": {
                    "required": true,
                    "description": "Asset ID",
                    "type": "string",
                    "location": "uri"
                }
            },
            "errorResponses": [
                {
                    "code": 401,
                    "phrase": "Invalid API key"
                },
                {
                    "code": 404,
                    "phrase": "Asset not in project"
                },
                {
                    "code": 403,
                    "phrase": "Insufficient privileges"
                }
            ]
        },
        "tagAsset": {
            "httpMethod": "POST",
            "uri": "\/api\/assets\/{id}\/tags.json",
            "class": "Guzzle\\Service\\Command\\OperationCommand",
            "responseClass": "Asset",
            "responseType": "model",
            "responseNotes": "<p>Tags an asset with a new or existing term. If the tag doesn't exist it will be created.<\/p>",
            "summary": "Tag an asset",
            "parameters": {
                "name": {
                    "required": true,
                    "description": "Name of new or existing tag",
                    "type": "string",
                    "location": "postField"
                },
                "key": {
                    "required": true,
                    "description": "Project API key",
                    "type": "string",
                    "location": "query"
                },
                "id": {
                    "required": true,
                    "description": "Asset ID",
                    "type": "string",
                    "location": "uri"
                }
            },
            "errorResponses": [
                {
                    "code": 401,
                    "phrase": "Invalid API key"
                },
                {
                    "code": 404,
                    "phrase": "Asset not in project"
                },
                {
                    "code": 403,
                    "phrase": "Insufficient privileges"
                }
            ]
        },
        "getLocales": {
            "httpMethod": "GET",
            "uri": "\/api\/locales.json",
            "class": "Guzzle\\Service\\Command\\OperationCommand",
            "responseClass": "array",
            "responseType": "primitive",
            "responseNotes": "Lists all locales in currently authenticated project. Your native\/source language will always be the first in the list",
            "summary": "List all locales in your project",
            "parameters": {
                "key": {
                    "required": true,
                    "description": "Project API key",
                    "type": "string",
                    "location": "query"
                }
            },
            "errorResponses": [
                {
                    "code": 401,
                    "phrase": "Invalid API key"
                }
            ]
        },
        "createLocale": {
            "httpMethod": "POST",
            "uri": "\/api\/locales.json",
            "class": "Guzzle\\Service\\Command\\OperationCommand",
            "responseClass": "Locale",
            "responseType": "model",
            "responseNotes": "<p>Adds a new locale to the currently authenticated project.<\/p>\n           <p>If the locale is created successfully the response will be 201 (created).<\/p>\n           <p>If the locale already exists the response will be 409 (conflict).<\/p>",
            "summary": "Add a new project locale",
            "parameters": {
                "code": {
                    "required": true,
                    "description": "Short code of locale to create, e.g. 'fr' or 'fr_FR'",
                    "type": "string",
                    "location": "postField"
                },
                "key": {
                    "required": true,
                    "description": "Project API key",
                    "type": "string",
                    "location": "query"
                }
            },
            "errorResponses": [
                {
                    "code": 409,
                    "phrase": "Locale already exists"
                },
                {
                    "code": 201,
                    "phrase": "Locale created"
                },
                {
                    "code": 401,
                    "phrase": "Invalid API key"
                },
                {
                    "code": 403,
                    "phrase": "Insufficient privileges"
                }
            ]
        },
        "getLocale": {
            "httpMethod": "GET",
            "uri": "\/api\/locales\/{locale}.json",
            "class": "Guzzle\\Service\\Command\\OperationCommand",
            "responseClass": "Locale",
            "responseType": "model",
            "responseNotes": "Gets a single locale in currently authenticated project",
            "summary": "Get a project locale",
            "parameters": {
                "key": {
                    "required": true,
                    "description": "Project API key",
                    "type": "string",
                    "location": "query"
                },
                "locale": {
                    "required": true,
                    "description": "Short code of project locale, e.g. 'fr' or 'fr_CH'",
                    "type": "string",
                    "location": "uri"
                }
            },
            "errorResponses": [
                {
                    "code": 401,
                    "phrase": "Invalid API key"
                },
                {
                    "code": 404,
                    "phrase": "Locale not in project"
                }
            ]
        },
        "patchLocale": {
            "httpMethod": "PATCH",
            "uri": "\/api\/locales\/{locale}.json",
            "class": "Guzzle\\Service\\Command\\OperationCommand",
            "responseClass": "Locale",
            "responseType": "model",
            "responseNotes": "<p>Modifies the properties of a locale in the currently authenticated project.<\/p>\n           <p>The full, modified locale object is returned.<\/p>",
            "summary": "Modify a project locale",
            "parameters": {
                "code": {
                    "description": "Locale short code",
                    "type": "string",
                    "location": "json"
                },
                "name": {
                    "description": "Friendly display name",
                    "type": "string",
                    "location": "json"
                },
                "key": {
                    "required": true,
                    "description": "Project API key",
                    "type": "string",
                    "location": "query"
                },
                "locale": {
                    "required": true,
                    "description": "Short code of project locale, e.g. 'fr' or 'fr_CH'",
                    "type": "string",
                    "location": "uri"
                }
            },
            "errorResponses": [
                {
                    "code": 401,
                    "phrase": "Invalid API key"
                },
                {
                    "code": 403,
                    "phrase": "Insufficient privileges"
                },
                {
                    "code": 404,
                    "phrase": "Locale not in project"
                }
            ]
        },
        "deleteLocale": {
            "httpMethod": "DELETE",
            "uri": "\/api\/locales\/{locale}.json",
            "class": "Guzzle\\Service\\Command\\OperationCommand",
            "responseClass": "Success",
            "responseType": "model",
            "responseNotes": "<p>Delete a locale from currently authenticated project.<\/p>\n           <p><strong>Warning<\/strong>: This will permanently delete any translations made in the specified locale across your project<\/p>\n           <p>Note that you cannot delete your native\/source locale.<\/p>",
            "summary": "Delete a project locale",
            "parameters": {
                "key": {
                    "required": true,
                    "description": "Project API key",
                    "type": "string",
                    "location": "query"
                },
                "locale": {
                    "required": true,
                    "description": "Short code of project locale, e.g. 'fr' or 'fr_CH'",
                    "type": "string",
                    "location": "uri"
                }
            },
            "errorResponses": [
                {
                    "code": 401,
                    "phrase": "Invalid API key"
                },
                {
                    "code": 404,
                    "phrase": "Locale not in project"
                },
                {
                    "code": 403,
                    "phrase": "Insufficient privileges"
                }
            ]
        },
        "getTranslations": {
            "httpMethod": "GET",
            "uri": "\/api\/translations\/{id}.json",
            "class": "Guzzle\\Service\\Command\\OperationCommand",
            "responseClass": "array",
            "responseType": "primitive",
            "responseNotes": "<p>Gets all translations of an asset in the currently authenticated project's locales.<\/p>\n           <p>Locales not yet translated are included, but their <code>translated<\/code> field will be set to <code>false<\/code>.<\/p>",
            "summary": "Get translations of an asset",
            "parameters": {
                "key": {
                    "required": true,
                    "description": "Project API key",
                    "type": "string",
                    "location": "query"
                },
                "id": {
                    "required": true,
                    "description": "Asset ID",
                    "type": "string",
                    "location": "uri"
                }
            },
            "errorResponses": [
                {
                    "code": 401,
                    "phrase": "Invalid API key"
                },
                {
                    "code": 404,
                    "phrase": "Asset not in project"
                }
            ]
        },
        "getTranslation": {
            "httpMethod": "GET",
            "uri": "\/api\/translations\/{id}\/{locale}.json",
            "class": "Guzzle\\Service\\Command\\OperationCommand",
            "responseClass": "Translation",
            "responseType": "model",
            "responseNotes": "<p>Gets a single translation in currently authenticated project.<\/p>\n           <p>Translations implicitly exist as long as the asset and locale are in your project.<\/p>\n           <p>Translations marked as complete have the <code>translated<\/code> field set to <code>true<\/code>.<\/p>",
            "summary": "Get a single translation",
            "parameters": {
                "key": {
                    "required": true,
                    "description": "Project API key",
                    "type": "string",
                    "location": "query"
                },
                "id": {
                    "required": true,
                    "description": "Asset ID",
                    "type": "string",
                    "location": "uri"
                },
                "locale": {
                    "required": true,
                    "description": "Short code of project locale, e.g. 'fr' or 'fr_CH'",
                    "type": "string",
                    "location": "uri"
                }
            },
            "errorResponses": [
                {
                    "code": 401,
                    "phrase": "Invalid API key"
                },
                {
                    "code": 404,
                    "phrase": "Asset not in project"
                },
                {
                    "code": 404,
                    "phrase": "Locale not in project"
                }
            ]
        },
        "translate": {
            "httpMethod": "POST",
            "uri": "\/api\/translations\/{id}\/{locale}.json",
            "class": "Guzzle\\Service\\Command\\OperationCommand",
            "responseClass": "Translation",
            "responseType": "model",
            "responseNotes": "<p>Translates a single asset in a single locale in the currently authenticated project.<\/p>\n           <p>If the asset is already translated, a new revision will be added and the <code>revision<\/code> field incremented.<\/p>\n           <p>If the asset is untranslated the locale must have already been added to the project.<\/p>\n           <p>Binary file uploads are not yet supported, but will be soon.<\/p>",
            "summary": "Add a new translation in a given locale",
            "parameters": {
                "translation": {
                    "description": "Raw value of new translation. Leaving empty puts a blank translation.",
                    "type": "string",
                    "location": "body"
                },
                "key": {
                    "required": true,
                    "description": "Project API key",
                    "type": "string",
                    "location": "query"
                },
                "id": {
                    "required": true,
                    "description": "Asset ID",
                    "type": "string",
                    "location": "uri"
                },
                "locale": {
                    "required": true,
                    "description": "Short code of project locale, e.g. 'fr' or 'fr_CH'",
                    "type": "string",
                    "location": "uri"
                }
            },
            "errorResponses": [
                {
                    "code": 401,
                    "phrase": "Invalid API key"
                },
                {
                    "code": 404,
                    "phrase": "Asset not in project"
                }
            ]
        },
        "untranslate": {
            "httpMethod": "DELETE",
            "uri": "\/api\/translations\/{id}\/{locale}.json",
            "class": "Guzzle\\Service\\Command\\OperationCommand",
            "responseClass": "Success",
            "responseType": "model",
            "responseNotes": "<p>Deletes a single translation of an asset in currently authenticated project.<\/p>\n           <p><strong>Warning<\/strong>: Untranslating is not the same as setting an empty translation. \n              This operation clears the asset's translation history and user comments for the given locale.<\/p>",
            "summary": "Untranslate an asset in a single locale",
            "parameters": {
                "key": {
                    "required": true,
                    "description": "Project API key",
                    "type": "string",
                    "location": "query"
                },
                "id": {
                    "required": true,
                    "description": "Asset ID",
                    "type": "string",
                    "location": "uri"
                },
                "locale": {
                    "required": true,
                    "description": "Short code of project locale, e.g. 'fr' or 'fr_CH'",
                    "type": "string",
                    "location": "uri"
                }
            },
            "errorResponses": [
                {
                    "code": 401,
                    "phrase": "Invalid API key"
                },
                {
                    "code": 404,
                    "phrase": "Asset not in project"
                },
                {
                    "code": 404,
                    "phrase": "Asset not translated in this locale"
                }
            ]
        },
        "ping": {
            "httpMethod": "GET",
            "uri": "\/api\/ping.json",
            "class": "Guzzle\\Service\\Command\\OperationCommand",
            "responseClass": "Echo",
            "responseType": "model",
            "responseNotes": "Checks the API is up and returns the API version number",
            "summary": "Check the API is up",
            "parameters": [

            ]
        },
        "ping404": {
            "httpMethod": "GET",
            "uri": "\/api\/ping\/not-found.json",
            "class": "Guzzle\\Service\\Command\\OperationCommand",
            "responseClass": "Error",
            "responseType": "model",
            "summary": "Get a test 404 response",
            "parameters": [

            ]
        },
        "convert": {
            "httpMethod": "POST",
            "uri": "\/api\/convert\/{from}\/{name}.{ext}",
            "class": "Guzzle\\Service\\Command\\OperationCommand",
            "responseClass": "\\Loco\\Http\\Response\\RawResponse",
            "responseType": "class",
            "responseNotes": "Use this API to convert between language pack file formats without a Loco account.<br \/> \n             Precise options depend on the file formats you're converting between.\n             <a href='https:\/\/localise.biz\/free\/converter\/api'>See some examples<\/a>.",
            "summary": "Convert a language pack to another file format",
            "parameters": {
                "src": {
                    "required": true,
                    "description": "Raw source of file being converted",
                    "type": "string",
                    "location": "body",
                    "default": "{\"foo\":\"bar\"}"
                },
                "from": {
                    "required": true,
                    "description": "Source file format being imported",
                    "type": "string",
                    "location": "uri",
                    "enum": [
                        "json",
                        "mo",
                        "php",
                        "po",
                        "properties",
                        "resx",
                        "strings",
                        "symfony",
                        "tmx",
                        "ts",
                        "xlf",
                        "xml",
                        "yml"
                    ],
                    "default": "json"
                },
                "ext": {
                    "required": true,
                    "description": "Target file format being exported, specified as a file extension",
                    "type": "string",
                    "location": "uri",
                    "enum": [
                        "csv",
                        "html",
                        "js",
                        "json",
                        "mo",
                        "phps",
                        "po",
                        "pot",
                        "properties",
                        "resx",
                        "sql",
                        "strings",
                        "tmx",
                        "ts",
                        "xlf",
                        "xml",
                        "yml"
                    ],
                    "default": "json"
                },
                "name": {
                    "description": "Domain\/namespace, applicable to some file formats",
                    "type": "string",
                    "location": "uri",
                    "default": "messages"
                },
                "format": {
                    "description": "Specific target format, required for some file types",
                    "type": "string",
                    "location": "query",
                    "enum": [
                        "",
                        "symfony",
                        "zend",
                        "codeigniter",
                        "constants",
                        "chrome",
                        "nested",
                        "java",
                        "tizen",
                        "gettext"
                    ]
                },
                "locale": {
                    "description": "Locale of target language pack, required in most cases",
                    "type": "string",
                    "location": "query"
                },
                "native": {
                    "description": "Optional source locale, not required in many cases",
                    "type": "string",
                    "location": "query"
                }
            },
            "errorResponses": [
                {
                    "code": 204,
                    "phrase": "No messages could be extracted from source"
                },
                {
                    "code": 422,
                    "phrase": "Empty or invalid source data"
                }
            ]
        }
    },
    "models": {
        "User": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "id": {
                    "description": "User id",
                    "type": "integer",
                    "location": "json"
                },
                "name": {
                    "description": "Full user name",
                    "type": "string",
                    "location": "json"
                },
                "email": {
                    "description": "User's email address",
                    "type": "string",
                    "location": "json"
                }
            }
        },
        "Group": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "id": {
                    "description": "Loco account id",
                    "type": "integer",
                    "location": "json"
                },
                "name": {
                    "description": "Loco account name",
                    "type": "string",
                    "location": "json"
                }
            }
        },
        "Project": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "id": {
                    "description": "Project id",
                    "type": "integer",
                    "location": "json"
                },
                "name": {
                    "description": "Project name",
                    "type": "string",
                    "location": "json"
                },
                "url": {
                    "description": "Project dashboard URL",
                    "type": "string",
                    "location": "json"
                }
            }
        },
        "Creds": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "user": {
                    "required": true,
                    "type": "object",
                    "location": "json",
                    "additionalProperties": false,
                    "properties": {
                        "id": {
                            "description": "User id",
                            "type": "integer",
                            "location": "json"
                        },
                        "name": {
                            "description": "Full user name",
                            "type": "string",
                            "location": "json"
                        },
                        "email": {
                            "description": "User's email address",
                            "type": "string",
                            "location": "json"
                        }
                    }
                },
                "group": {
                    "required": true,
                    "type": "object",
                    "location": "json",
                    "additionalProperties": false,
                    "properties": {
                        "id": {
                            "description": "Loco account id",
                            "type": "integer",
                            "location": "json"
                        },
                        "name": {
                            "description": "Loco account name",
                            "type": "string",
                            "location": "json"
                        }
                    }
                },
                "project": {
                    "required": true,
                    "type": "object",
                    "location": "json",
                    "additionalProperties": false,
                    "properties": {
                        "id": {
                            "description": "Project id",
                            "type": "integer",
                            "location": "json"
                        },
                        "name": {
                            "description": "Project name",
                            "type": "string",
                            "location": "json"
                        },
                        "url": {
                            "description": "Project dashboard URL",
                            "type": "string",
                            "location": "json"
                        }
                    }
                }
            }
        },
        "anon_type_string": {
            "type": "string"
        },
        "Asset": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "id": {
                    "required": true,
                    "description": "Machine friendly name",
                    "type": "string",
                    "location": "json"
                },
                "type": {
                    "required": true,
                    "description": "Broad content type, defaults to plain text",
                    "type": "string",
                    "location": "json",
                    "enum": [
                        "text",
                        "html",
                        "image",
                        "audio",
                        "video",
                        "bin"
                    ]
                },
                "name": {
                    "required": true,
                    "description": "Human friendly name",
                    "type": "string",
                    "location": "json"
                },
                "context": {
                    "required": true,
                    "description": "Optional context descriptor",
                    "type": "string",
                    "location": "json"
                },
                "modified": {
                    "required": true,
                    "description": "Time last modified in UTC",
                    "type": "string",
                    "format": "date-time",
                    "location": "json"
                },
                "translated": {
                    "required": true,
                    "description": "Number of completed translations",
                    "type": "integer",
                    "location": "json"
                },
                "untranslated": {
                    "required": true,
                    "description": "Number of incomplete translations",
                    "type": "integer",
                    "location": "json"
                },
                "tags": {
                    "required": true,
                    "description": "List of terms asset is tagged with",
                    "type": "array",
                    "location": "json",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "AssetPatch": {
            "description": "Patch class for documentation only.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "id": {
                    "description": "Machine friendly name",
                    "type": "string",
                    "location": "json"
                },
                "type": {
                    "description": "Broad content type, defaults to plain text",
                    "type": "string",
                    "location": "json",
                    "enum": [
                        "text",
                        "html",
                        "image",
                        "audio",
                        "video",
                        "bin"
                    ]
                },
                "name": {
                    "description": "Human friendly name",
                    "type": "string",
                    "location": "json"
                },
                "context": {
                    "description": "Optional context descriptor",
                    "type": "string",
                    "location": "json"
                }
            }
        },
        "Success": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "status": {
                    "required": true,
                    "description": "HTTP status 2xx code",
                    "type": "integer",
                    "location": "json"
                },
                "message": {
                    "required": true,
                    "description": "Descriptive success message",
                    "type": "string",
                    "location": "json"
                }
            }
        },
        "LocalePatch": {
            "description": "Patch class for documentation only.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "code": {
                    "description": "Locale short code",
                    "type": "string",
                    "location": "json"
                },
                "name": {
                    "description": "Friendly display name",
                    "type": "string",
                    "location": "json"
                }
            }
        },
        "Plurals": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "length": {
                    "required": true,
                    "description": "Number of plural forms for current language",
                    "type": "integer",
                    "location": "json",
                    "minimum": 1,
                    "maximum": 6
                },
                "equation": {
                    "required": true,
                    "description": "Equation taking multiplier <code>(n)<\/code> to yield a plural form offset. <code>( 0 <= offset < length )<\/code>.",
                    "type": "string",
                    "location": "json"
                },
                "forms": {
                    "required": true,
                    "description": "Plural form names according to <a href=\"http:\/\/unicode.org\/reports\/tr35\/tr35-numbers.html#Language_Plural_Rules\">Unicode tr35<\/a>.",
                    "type": "array",
                    "location": "json",
                    "enum": [
                        "zero",
                        "one",
                        "two",
                        "few",
                        "many",
                        "other"
                    ],
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "Locale": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "code": {
                    "required": true,
                    "description": "Locale short code",
                    "type": "string",
                    "location": "json"
                },
                "name": {
                    "required": true,
                    "description": "Friendly display name",
                    "type": "string",
                    "location": "json"
                },
                "native": {
                    "required": true,
                    "description": "Whether the source locale of project (read-only)",
                    "type": "boolean",
                    "location": "json"
                },
                "plurals": {
                    "required": true,
                    "type": "object",
                    "location": "json",
                    "additionalProperties": false,
                    "properties": {
                        "length": {
                            "required": true,
                            "description": "Number of plural forms for current language",
                            "type": "integer",
                            "location": "json",
                            "minimum": 1,
                            "maximum": 6
                        },
                        "equation": {
                            "required": true,
                            "description": "Equation taking multiplier <code>(n)<\/code> to yield a plural form offset. <code>( 0 <= offset < length )<\/code>.",
                            "type": "string",
                            "location": "json"
                        },
                        "forms": {
                            "required": true,
                            "description": "Plural form names according to <a href=\"http:\/\/unicode.org\/reports\/tr35\/tr35-numbers.html#Language_Plural_Rules\">Unicode tr35<\/a>.",
                            "type": "array",
                            "location": "json",
                            "enum": [
                                "zero",
                                "one",
                                "two",
                                "few",
                                "many",
                                "other"
                            ],
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "Translation": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "id": {
                    "required": true,
                    "description": "Asset ID",
                    "type": "string",
                    "location": "json"
                },
                "locale": {
                    "required": true,
                    "type": "object",
                    "location": "json",
                    "additionalProperties": false,
                    "properties": {
                        "code": {
                            "required": true,
                            "description": "Locale short code",
                            "type": "string",
                            "location": "json"
                        },
                        "name": {
                            "required": true,
                            "description": "Friendly display name",
                            "type": "string",
                            "location": "json"
                        },
                        "native": {
                            "required": true,
                            "description": "Whether the source locale of project (read-only)",
                            "type": "boolean",
                            "location": "json"
                        },
                        "plurals": {
                            "required": true,
                            "type": "object",
                            "location": "json",
                            "additionalProperties": false,
                            "properties": {
                                "length": {
                                    "required": true,
                                    "description": "Number of plural forms for current language",
                                    "type": "integer",
                                    "location": "json",
                                    "minimum": 1,
                                    "maximum": 6
                                },
                                "equation": {
                                    "required": true,
                                    "description": "Equation taking multiplier <code>(n)<\/code> to yield a plural form offset. <code>( 0 <= offset < length )<\/code>.",
                                    "type": "string",
                                    "location": "json"
                                },
                                "forms": {
                                    "required": true,
                                    "description": "Plural form names according to <a href=\"http:\/\/unicode.org\/reports\/tr35\/tr35-numbers.html#Language_Plural_Rules\">Unicode tr35<\/a>.",
                                    "type": "array",
                                    "location": "json",
                                    "enum": [
                                        "zero",
                                        "one",
                                        "two",
                                        "few",
                                        "many",
                                        "other"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "type": {
                    "required": true,
                    "description": "Specific media type, e.g. text\/plain, image\/jpeg",
                    "type": "string",
                    "location": "json"
                },
                "translated": {
                    "required": true,
                    "description": "Whether translation in this locale is considered complete",
                    "type": "boolean",
                    "location": "json",
                    "default": false
                },
                "flagged": {
                    "required": true,
                    "description": "Whether translation is incomplete due to an issue requiring attention",
                    "type": "boolean",
                    "location": "json",
                    "default": false
                },
                "translation": {
                    "required": true,
                    "description": "Translated text in specified locale",
                    "type": "string",
                    "location": "json"
                },
                "revision": {
                    "required": true,
                    "description": "Number of edits made, zero if not translated",
                    "type": "integer",
                    "location": "json"
                },
                "comments": {
                    "required": true,
                    "description": "Number of comments available",
                    "type": "integer",
                    "location": "json"
                },
                "modified": {
                    "description": "Time last modified in UTC, null if not translated",
                    "type": "string",
                    "format": "date-time",
                    "location": "json"
                }
            }
        },
        "Echo": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "version": {
                    "required": true,
                    "description": "Current API version",
                    "type": "string",
                    "location": "json"
                }
            }
        },
        "Error": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "status": {
                    "required": true,
                    "description": "HTTP status code",
                    "type": "integer",
                    "location": "json"
                },
                "error": {
                    "required": true,
                    "description": "Description of error",
                    "type": "string",
                    "location": "json"
                }
            }
        }
    }
}